<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAdd.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vwAADr8BOAVTJAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAS6SURBVHhe7Z3L
        bhRXEIY72XJZYrIIoXuQWPASrJw+LcVKDE/CCiEWvASXrDAIJaJnYhIpgeQdQMLwCmDYcBFYJgsrTlXP
        Uez0/PYMFvTpqfp/6bPl7tPHmq5v+qYpTTZL6jNnD9d5OD/Mw61hEdaE18I26RVakzWp0cqoqM7dXlg8
        FMt38PzyzbdfjfLwo0z8Ydc/IvOB1ux6fbI6Hss5e65kV74cDsrLMsHGrgnJfLIhR4VLWtNY3v2jh3vZ
        aLU1CZlz6iL8cedUOBrLjNOc64vwCE1A5h+trdY4lvv/aQ77efkr2pDYQSS4B08H8ZwPNyLGkGuCWPZx
        9GpfVvCCzw8bWvNY/iyLt3poIDFLdaMpfrzq532+P/7+7fTSkax5wocHEPOUy1l8vAtWEvPkYSWT24Kn
        cCXxwFomP962FhI/vFEBtloLiR+2VAC0gjiBAjiHAjiHAjiHAjiHAjiHAjiHAjiHAjiHAjiHAjiHAjiH
        AjiHAjiHAjjHswDr2i4lv+8LL3Ytd4VHAZ7Vebm0nWVfNB+LlminzGgQvh8OwnMw3jTeBHj282Dx61j3
        ieg6bxK4EkDf+bHWe6YelD+gba3iRwB5Z+8+7O+VpknW0TWBpyPA/VjjqakH4U+wvUkcHQGqOtZ3anQs
        nMMgFACEAliEAkAoAAgFsAgFgFAAEApgEQoAoQAgFMAiFABCAUAogEUoAIQCgFAAi1AACAUAoQAWoQAQ
        CgBCASxCASAUAIQCWIQCQCgACAWwCAWAUAAQCpCGca+e7vzPQF1UF2J9p0bHojk+CT3rReyDABO9etbT
        p17E1ALs26tnPX3oRUwqwCy9etaTuhcxnQAz9upZT+pexJRHgJl79awnZS9iOgHy8kF8/e4j++Ovif3T
        ESmPAOvwO2ydxfMpYFtvheJ+cJtRUZ1D+6YrkgqgF4KebwPr4rsTsh/WJ/ZLh6QVQBEJ9FbI0+lgfNgv
        l+X1Jy2+kl6AHV7ohSF8fPoJ6M2jYH2NRXjZeu3J6JMAnxfZ+bG+U9MUCs1hEAoAQgEsQgEgFACEAliE
        AkAoAAgFsAgFgFAAEApgEQoAoQAgFMAiFABCAUAogEUoAIQCgFAAi1AACAUAoQAWoQAQCgBCASxCASAU
        AIQCWIQCQCgACAWwyEf0Isr4ZL16XeNHgBl7EVP36nWNJwFm6kVM3avXNa4EmNaL2Ideva7xJYACehH7
        1KvXNf4E2GHci9izXr2u8SwAESiAcyiAcyiAcyiAcyiAcyiAcyiAcyiAcyiAcyiAcyiAcyiAcyiAcyiA
        c1SArfZC4oYtFeBtayHxwxsV4ElrIXFCXVSPs2EeVtBKYp9RUd109zFosoN+ODa7vbB4SP7YbK8k5tnU
        2jcfi5Y/rrdWEvNUV5via1YHi8dk4bvJQcQo7+uT1fFY/nHkYvASGEgMUhflxVj2nej3+A4H5V20AbFD
        XYR7ezbJ1mfOHpYBj9CGxAQPtcax3Dg6QAautjYkc0/1+51T4Wgs8/5pmiXH1wQbkxOROeO9nvMP9FX9
        eqUo5tyQST60JiX9Z3NUhGs/5UsLsZwHjz4waJ4Y5mFFnx/L5K9b/4yk5R/hVVOb5tF+ufzfQ559k2X/
        Aii0Kax/EQVmAAAAAElFTkSuQmCC
</value>
  </data>
</root>